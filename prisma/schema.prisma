generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod"
  ignore                = ["id", "created_at", "deleted_at", "updated_at"]
  prismaJsonNullability = "true"
  modelSuffix           = "Model"
  relationModel         = "false"
  modelCase             = "PascalCase"
  useDecimalJs          = "true"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model role {
  id             Int               @id @unique @default(autoincrement())
  name           String
  description    String?
  status         Int?              @default(1)
  created_at     DateTime?         @default(now())
  updated_at     DateTime?         @updatedAt
  deleted_at     DateTime?
  deleted        Boolean?          @default(false)
  action_log     action_log[]
  role_permision role_permission[]
  user           user[]

  @@unique([name, deleted, deleted_at], name: "name_deleted")
  @@index([name, status])
}

model permission {
  id             Int               @id @default(autoincrement())
  name           String
  status         Int?              @default(1)
  created_at     DateTime?         @default(now())
  updated_at     DateTime?         @updatedAt
  deleted_at     DateTime?
  deleted        Boolean?          @default(false)
  role_permision role_permission[]

  @@unique([name, deleted, deleted_at], name: "name_deleted")
  @@index([name, status])
}

model role_permission {
  id            Int         @id @default(autoincrement())
  role_id       Int?
  permission_id Int?
  created_at    DateTime?   @default(now())
  updated_at    DateTime?   @updatedAt
  deleted_at    DateTime?
  deleted       Boolean?    @default(false)
  permission    permission? @relation(fields: [permission_id], references: [id])
  role          role?       @relation(fields: [role_id], references: [id])

  @@index([role_id, permission_id])
}

model organization_profile {
  id            Int       @id @unique @default(autoincrement())
  logo          String
  name          String
  industry      String
  business_type String
  address       String
  country_id    Int
  state_id      Int
  city          String
  pincode       Int
  area_code_1   Int
  mobile_no_1   Int
  area_code_2   Int
  mobile_no_2   Int
  email_1       String
  email_2       String
  primary_color String
  created_at    DateTime? @default(now())
  updated_at    DateTime? @updatedAt
  deleted_at    DateTime?
  deleted       Boolean?  @default(false)
  country       country   @relation(fields: [country_id], references: [id])
  state         state     @relation(fields: [state_id], references: [id])
}

model organization {
  id                Int                 @id @unique @default(autoincrement())
  name              String
  status            Int?                @default(1)
  created_at        DateTime?           @default(now())
  updated_at        DateTime?           @updatedAt
  deleted_at        DateTime?
  deleted           Boolean?            @default(false)
  cin               String?
  gst_number        String?
  industry_id       Int?
  logo              String?
  theme_id          Int?
  business_unit     business_unit[]
  business_vertical business_vertical[]
  entity            entity[]
  industry          industry?           @relation(fields: [industry_id], references: [id])
  theme             theme?              @relation(fields: [theme_id], references: [id])
  zone              zone[]

  @@unique([name, deleted, deleted_at], name: "name_deleted")
}

model entity {
  id                    Int                     @id @unique @default(autoincrement())
  name                  String
  status                Int?                    @default(1)
  created_at            DateTime?               @default(now())
  deleted_at            DateTime?
  deleted               Boolean?                @default(false)
  updated_at            DateTime?               @updatedAt
  organization_id       Int
  cin                   String?
  industry_id           Int?
  logo                  String?
  gst                   String?
  pan                   String?
  short_name            String?
  tan                   String?
  business_unit         business_unit[]
  business_vertical     business_vertical[]
  industry              industry?               @relation(fields: [industry_id], references: [id])
  organization          organization            @relation(fields: [organization_id], references: [id])
  zone                  zone[]
  user_function_mapping user_function_mapping[]

  @@unique([name, deleted, deleted_at], name: "name_deleted")
}

model business_vertical {
  id              Int             @id @unique @default(autoincrement())
  name            String
  status          Int?            @default(1)
  created_at      DateTime?       @default(now())
  updated_at      DateTime?       @updatedAt
  deleted_at      DateTime?
  deleted         Boolean?        @default(false)
  entity_id       Int?
  organization_id Int?
  business_unit   business_unit[]
  entity          entity?         @relation(fields: [entity_id], references: [id])
  organization    organization?   @relation(fields: [organization_id], references: [id])
  zone            zone[]

  @@unique([name, deleted, deleted_at], name: "name_deleted")
}

model zone {
  id                    Int                     @id @unique @default(autoincrement())
  name                  String
  status                Int?                    @default(1)
  created_at            DateTime?               @default(now())
  updated_at            DateTime?               @updatedAt
  deleted_at            DateTime?
  deleted               Boolean?                @default(false)
  business_vertical_id  Int?
  entity_id             Int?
  organization_id       Int?
  business_unit         business_unit[]
  unit_function_mapping unit_function_mapping[]
  business_vertical     business_vertical?      @relation(fields: [business_vertical_id], references: [id])
  entity                entity?                 @relation(fields: [entity_id], references: [id])
  organization          organization?           @relation(fields: [organization_id], references: [id])

  @@unique([name, deleted, deleted_at], name: "name_deleted")
}

model business_unit {
  id                    Int                     @id @unique @default(autoincrement())
  organization_id       Int?
  entity_id             Int?
  business_vertical_id  Int?
  zone_id               Int?
  name                  String
  address1              String
  address2              String?
  country               String?
  state                 String?
  city                  String?
  zipcode               String
  created_at            DateTime?               @default(now())
  updated_at            DateTime?               @updatedAt
  deleted_at            DateTime?
  deleted               Boolean?                @default(false)
  unit_code             String?
  unit_type_id          Int
  activity_mapping      activity_mapping[]
  business_vertical     business_vertical?      @relation(fields: [business_vertical_id], references: [id])
  entity                entity?                 @relation(fields: [entity_id], references: [id])
  organization          organization?           @relation(fields: [organization_id], references: [id])
  unit_type             unit_type               @relation(fields: [unit_type_id], references: [id])
  zone                  zone?                   @relation(fields: [zone_id], references: [id])
  unit_function_mapping unit_function_mapping[]
  user                  user[]
  user_function_mapping user_function_mapping[]

  @@unique([name, deleted, deleted_at], name: "name_deleted")
}

model function_department {
  id                    Int                     @id @unique @default(autoincrement())
  name                  String
  created_at            DateTime?               @default(now())
  deleted_at            DateTime?
  deleted               Boolean?                @default(false)
  updated_at            DateTime?               @updatedAt
  activity_mapping      activity_mapping[]
  unit_function_mapping unit_function_mapping[]
  user                  user[]
  user_function_mapping user_function_mapping[]

  @@unique([name, deleted, deleted_at], name: "name_deleted")
}

model unit_type {
  id            Int             @id @unique @default(autoincrement())
  name          String
  status        Int?            @default(1)
  created_at    DateTime?       @default(now())
  updated_at    DateTime?       @updatedAt
  deleted_at    DateTime?
  deleted       Boolean?        @default(false)
  business_unit business_unit[]

  @@unique([name, deleted, deleted_at], name: "name_deleted")
}

model unit_function_mapping {
  id                     Int                 @id @unique @default(autoincrement())
  business_unit_id       Int
  function_department_id Int
  created_at             DateTime?           @default(now())
  updated_at             DateTime?           @updatedAt
  deleted_at             DateTime?
  deleted                Boolean?            @default(false)
  zoneId                 Int?
  business_unit          business_unit       @relation(fields: [business_unit_id], references: [id])
  function               function_department @relation(fields: [function_department_id], references: [id])
  zone                   zone?               @relation(fields: [zoneId], references: [id])
}

model user {
  id                              Int                     @id @unique @default(autoincrement())
  employee_id                     String
  first_name                      String
  middle_name                     String?
  last_name                       String
  email                           String                  @unique
  mobile_no                       String                  @unique
  password                        String
  role_id                         Int?
  status                          Int                     @default(1)
  created_at                      DateTime?               @default(now())
  updated_at                      DateTime?               @updatedAt
  deleted_at                      DateTime?
  deleted                         Boolean?                @default(false)
  password_changed_at             DateTime?
  designation_id                  Int?
  function_department_id          Int?
  business_unit_id                Int?
  profile_picture                 String?
  action_log                      action_log[]
  activity_history                activity_history[]
  evaluator_activity_mappings     activity_mapping[]      @relation("evaluatorRelation")
  executor_activity_mappings      activity_mapping[]      @relation("executorRelation")
  function_head_activity_mappings activity_mapping[]      @relation("functionheadRelation")
  business_unit                   business_unit?          @relation(fields: [business_unit_id], references: [id])
  designation                     designation?            @relation(fields: [designation_id], references: [id])
  function_department             function_department?    @relation(fields: [function_department_id], references: [id])
  role                            role?                   @relation(fields: [role_id], references: [id])
  user_otp                        user_otp[]
  user_function_mapping           user_function_mapping[]

  @@unique([email, mobile_no, deleted, deleted_at], name: "email_mobile_deleted")
  @@index([email, mobile_no])
}

model user_function_mapping {
  id                     Int                 @id @unique @default(autoincrement())
  user_id                Int
  entity_id              Int
  business_unit_id       Int
  function_department_id Int
  created_at             DateTime?           @default(now())
  updated_at             DateTime?           @updatedAt
  deleted_at             DateTime?
  deleted                Boolean?            @default(false)
  user                   user                @relation(fields: [user_id], references: [id])
  entity                 entity              @relation(fields: [entity_id], references: [id])
  business_unit          business_unit       @relation(fields: [business_unit_id], references: [id])
  function               function_department @relation(fields: [function_department_id], references: [id])
}

model crs_activity {
  id                     Int                @id @unique @default(autoincrement())
  activity_code          String
  title                  String?            @unique
  legislation            String
  rule                   String
  reference              String
  who                    String
  when                   String
  activity               String
  procedure              String
  description            String?
  frequency              frequency?
  form_no                String?
  compliance_type        String?
  authority              String?
  exemption_criteria     String?
  event                  String?
  event_sub              String?
  event_question         String?
  implications           String?
  imprison_duration      String?
  imprison_applies_to    imprisonment_for?
  currency               String?
  fine                   String?
  fine_per_day           String?
  impact                 impact
  impact_on_unit         impact?
  impact_on_organization impact?
  linked_activity_ids    String?
  reference_link         String?
  sources                String?
  documents              String?
  status                 Int?
  created_at             DateTime?          @default(now())
  updated_at             DateTime?          @updatedAt
  deleted_at             DateTime?
  deleted                Boolean?           @default(false)
  country                String
  law_category           String
  legal_due_date         String?
  state                  String?
  updated_date           String?
  activity_mapping       activity_mapping[]
}

model activity_mapping {
  id                     Int                      @id @unique @default(autoincrement())
  unit_activity_id       String
  function_id            Int
  executor_id            Int
  evaluator_id           Int
  function_head_id       Int
  created_at             DateTime?                @default(now())
  updated_at             DateTime?                @updatedAt
  deleted_at             DateTime?
  deleted                Boolean?                 @default(false)
  business_unit_id       Int
  crs_activity_id        Int
  activity_configuration activity_configuration[]
  activity_history       activity_history[]
  business_unit          business_unit            @relation(fields: [business_unit_id], references: [id])
  crs_activity           crs_activity             @relation(fields: [crs_activity_id], references: [id])
  evaluator              user                     @relation("evaluatorRelation", fields: [evaluator_id], references: [id])
  executor               user                     @relation("executorRelation", fields: [executor_id], references: [id])
  function_head          user                     @relation("functionheadRelation", fields: [function_head_id], references: [id])
  function               function_department      @relation(fields: [function_id], references: [id])

  @@unique([id, unit_activity_id])
}

model activity_configuration {
  id                     Int                @id @unique @default(autoincrement())
  due_date_buffer        Int?
  legal_due_date         DateTime
  unit_head_due_date     DateTime
  function_head_due_date DateTime
  evaluator_due_date     DateTime
  executor_due_date      DateTime
  back_dates             Int?
  first_alert            DateTime?
  second_alert           DateTime?
  third_alert            DateTime?
  created_at             DateTime?          @default(now())
  updated_at             DateTime?          @updatedAt
  deleted_at             DateTime?
  deleted                Boolean?           @default(false)
  alert_prior_days       Int?
  historical             Int?
  status                 Int?
  impact_on_entity       String?
  impact_on_unit         String?
  impact                 String?
  frequency              String?
  activity_maker_checker Int
  proof_required         Int?
  activity_mapping_id    Int
  activity_mapping       activity_mapping   @relation(fields: [activity_mapping_id], references: [id])
  activity_history       activity_history[]
}

model activity_history {
  id                        Int                    @id @unique @default(autoincrement())
  executor_id               Int
  evaluator_id              Int
  function_head_id          Int
  legal_due_date            DateTime
  unit_head_due_date        DateTime
  function_head_due_date    DateTime
  evaluator_due_date        DateTime
  executor_due_date         DateTime
  completed_by              Int?
  completion_date           DateTime?
  comments                  String?
  non_compliance_reason     String?
  reason_for_reopen         String?
  document                  String[]
  activity_history_status   legal_status?
  created_at                DateTime?              @default(now())
  deleted                   Boolean?               @default(false)
  deleted_at                DateTime?
  status                    Int                    @default(1)
  updated_at                DateTime?              @updatedAt
  activity_configuration_id Int
  activity_configuration    activity_configuration @relation(fields: [activity_configuration_id], references: [id])
  activity_mapping_id       Int
  activity_mapping          activity_mapping       @relation(fields: [activity_mapping_id], references: [id])
  user                      user?                  @relation(fields: [completed_by], references: [id])
}

model industry {
  id           Int            @id @unique @default(autoincrement())
  name         String
  created_at   DateTime?      @default(now())
  updated_at   DateTime?      @updatedAt
  deleted_at   DateTime?
  deleted      Boolean?       @default(false)
  entity       entity[]
  organization organization[]
}

model designation {
  id         Int       @id @default(autoincrement())
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  deleted    Boolean?  @default(false)
  user       user[]
}

model theme {
  id              Int            @id @default(autoincrement())
  name            String
  primary_color   String
  secondary_color String?
  mode            String
  created_at      DateTime?      @default(now())
  updated_at      DateTime?      @updatedAt
  deleted_at      DateTime?
  deleted         Boolean?       @default(false)
  organization    organization[]
}

model user_otp {
  id      Int    @id @default(autoincrement())
  user_id Int
  otp     String
  user    user   @relation(fields: [user_id], references: [id])
}

model country {
  id                   Int                    @id @default(autoincrement())
  name                 String
  short_name           String                 @unique
  country_code         String?
  timezone             String?
  uts_offset           String?
  status               Int?                   @default(1)
  created_at           DateTime?              @default(now())
  deleted_at           DateTime?
  deleted              Boolean?               @default(false)
  updated_at           DateTime?              @updatedAt
  organization_profile organization_profile[]
  state                state[]

  @@unique([name, deleted, deleted_at], name: "name_deleted")
}

model state {
  id                   Int                    @id @default(autoincrement())
  code                 String?                @unique
  name                 String
  country_id           Int?
  status               Int?                   @default(1)
  created_at           DateTime?              @default(now())
  deleted_at           DateTime?
  deleted              Boolean?               @default(false)
  updated_at           DateTime?              @updatedAt
  organization_profile organization_profile[]
  country              country?               @relation(fields: [country_id], references: [id])

  @@unique([name, deleted, deleted_at], name: "name_deleted")
}

model standard_comments {
  id         Int       @id @default(autoincrement())
  name       String
  status     Int?      @default(1)
  created_at DateTime? @default(now())
  deleted_at DateTime?
  deleted    Boolean?  @default(false)
  updated_at DateTime? @updatedAt

  @@unique([name, deleted, deleted_at], name: "name_deleted")
}

model action_log {
  id           Int       @id @default(autoincrement())
  action_name  String
  model_name   String
  request_data Json?
  status       Int?      @default(1)
  ip_address   String
  created_at   DateTime? @default(now())
  deleted_at   DateTime?
  deleted      Boolean?  @default(false)
  updated_at   DateTime? @updatedAt
  user_id      Int?
  record_id    Int?
  role         role?     @relation(fields: [record_id], references: [id], onUpdate: SetNull, map: "role_action_log")
  user         user?     @relation(fields: [user_id], references: [id], onUpdate: SetNull, map: "user_action_log")
}

enum legal_status {
  Complied
  Escalated
  Non_Complied     @map("Non Complied")
  Delayed
  Delayed_Reported @map("Delayed Reported")
  Re_Assigned      @map("Re Assigned")
  Approval_Pending @map("Approval Pending")
}

enum frequency {
  Onetime
  Ongoing
  Event_based @map("event based")
  yearly10    @map("10 yearly")
  yearly8     @map("8 yearly")
  yearly5     @map("5 yearly")
  yearly4     @map("4 yearly")
  yearly3     @map("3 yearly")
  yearly2     @map("2 yearly")
  yearly      @map("yearly")
  monthly10   @map("10 monthly")
  monthly4    @map("4 monthly")
  Half_yearly @map("Half yearly")
  Quarterly
  Bi_monthly  @map("Bi-monthly")
  Monthly
  Fortnightly
  Weekly
  event
}

enum impact {
  Super_Critical @map("Super Critical")
  Critical
  High
  Moderate
  Low
}

enum applies {
  Company
  Product
  Individual
}

enum imprisonment_for {
  Managing_Director  @map("Managing Director")
  Managerial_Person  @map("Managerial Person")
  General_Manager    @map("General Manager")
  Occupier
  Manager
  Principal_Employer @map("Principal Employer")
  Employer
  Contractor
  Owner
  Officer_in_default @map("Officer in default")
}
